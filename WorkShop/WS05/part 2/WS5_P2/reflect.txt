// Chun Kit Jacky Siu - 2021/10/17
// email: jsiu5@myseneca.ca
// ID:134663186
// I have done all the coding by myself and only copied the code that my professor provided 
to complete my workshops and assignments.

A functor is a function object that is instantiated by a class. That class define the structure of the function object. 
And part of what makes a functor is the overloading of the  call operator "()". And like the instance of a class a 
function object can store state which affect how it operates. A functor is used when ever you require a function that 
will change its result according to the state that it is in. A lambda function is similar to a functor but it can only 
be use within a local area of an application that is within a function. lambda does not require an identifier, instead 
it's state can be set by capture variable or it can not have a state and simply produce result like an ordinary function. 
A lambda function is a shorthand function object.

The constructor for SpellChecker generate an exception for certain condition. If I were to change my code to achieve the 
same result, but without exception. This is not a perfect fix, but if you know for sure the name of the file you are 
going to open. You can set the constructor to open the file and load the good words and bad words only if the file name 
matches the one you are looking for. And for the SpellChecker' call operator to only runs its code if the good words and 
bad words aren't their default value and same with the display function showStatistic(ostream& out). That way the program 
will run even if the file is nonexistence, or different file name than the one you are looking for is used. But it I am on 
the client side I will simply call the right file and there by even if I didn't change anything on the constructor side. No 
exception will be generated.

If i were to design the classes Movies and Book into a single class in order to not duplicate that logic. If i were to 
modified the class Book to include Movies I would change the custom constructor to include another argument that indicate 
whether it is a book or a movie. Book( const string& bookOrmovie, const string& stringToBeProcessed) if it is Book Load the 
member variable a certain way, and if it's Movie load the member variable a different way. And for the ostream insertion << 
operator function I would have it change the way that it display its object by checking if price = 0u or author = "" or 
country = "". if price and author and country are not their default display a book, else display a movie.

The classes Movie and Book are instantiated from the main() function using custom constructor, but they also contain a default 
constructor. is the default constructor necessary? I would argue that it is necessary because the client did use Movie movie[5], 
and that uses the default constructor. And then I uses the move assignment function to assignment information to the default 
instantiated object.


